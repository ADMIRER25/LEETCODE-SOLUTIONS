T.C--> O(N)
S.C-->O(N)
----------
Code:
-----
class Solution {
public:
   TreeNode* buildTreehelper(vector<int>&preorder,vector<int>&inorder,int prestart,int preend,int instart,int inend, unordered_map<int,int>&mp)
   {
     if(prestart > preend) return NULL;
     TreeNode * root = new TreeNode(preorder[prestart]);
     
     int inroot= mp[root->val];
     int numsleft = inroot - instart;
     
     root ->left =  buildTreehelper(preorder,inorder,prestart+1,prestart+numsleft,instart,inroot-1,mp);
     root -> right = buildTreehelper(preorder,inorder,prestart+numsleft+1,preend,inroot+1,inend,mp);
     
     return root;
   }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder)
    {
      unordered_map<int,int>mp;
      for(int i = 0; i < inorder.size(); i++) mp[inorder[i]] = i;
     
      return buildTreehelper(preorder,inorder,0,preorder.size()-1,0,inorder.size()-1,mp);
    }
};
