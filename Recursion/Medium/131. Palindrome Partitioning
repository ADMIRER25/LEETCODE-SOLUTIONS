class Solution {
public:
  bool palindrome(int start,int end,string s)
  {
    while(start < end)
    {
      if(s[start++] != s[end--]) return false;
    }
    return true;
  }
  void helper(int index, string s,vector<vector<string>> &ans,vector<string>&substring)
  {
    if(index == s.length())
    {
      ans.push_back(substring);
      return;
    }
    
    for(int i = index; i < s.length(); i++)
    {
      if(palindrome(index,i,s))
      {
        substring.push_back(s.substr(index,i - index + 1));
        helper(i +1,s,ans,substring);
        substring.pop_back();
      }
    }
  }
    vector<vector<string>> partition(string s)
    {
        vector<vector<string>> ans;
        vector <string> substring;
        helper(0,s,ans,substring);
        return ans;
    }
};
