Time Complexity --> O(n)
Space Complexity --> O(n)
-------------------------
Code:
-----
#include<bits/stdc++.h>
class Solution {
public:
    int largestRectangleArea(vector<int>&v)
    {
      int n = v.size();
      vector<int>ngr(n,n),ngl(n);
      stack<pair<int,int>>st1,st2;// for ngr // for ngl
      // find ngr index for every element
      for(int i = n - 1; i >= 0; i--)
      {
          int ele = v[i];
          while(!st1.empty() && st1.top().first >= ele)
          {
              st1.pop();
          }
          if(!st1.empty()) ngr[i] = st1.top().second;
          st1.push({ele,i});
      }
      // find ngl index for every element
       for(int i = 0; i < n; i++)
      {
          int ele = v[i];
          while(!st2.empty() && st2.top().first >= ele)
          {
              st2.pop();
          }
          if(!st2.empty()) ngl[i] = st2.top().second;
          else ngl[i] = -1;
          st2.push({ele,i});
      }
      // comparing the area for each element
      int max = -1;
      for(int i = 0; i < n; i++)
      {
        int area = v[i] * ((ngr[i]-ngl[i])-1);
        if(max < area)
        {
            max = area;
        }
      }
        return max;
    }
};
