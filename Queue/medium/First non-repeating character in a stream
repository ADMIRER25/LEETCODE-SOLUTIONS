T.C--> O(N)
S.C--> O(26) //doubt.
class Solution {
	public:
		string FirstNonRepeating(string a)
		{
		   unordered_map<char,int>mp;
		   queue<char>q;
		   string ans = "";
		   int size = a.size();
		   
		   for(int i = 0; i < size; i++)
		   {
		       char ch = a[i];
		       //to see whether it is repeating or not
		       mp[ch]++;
		       
		       q.push(ch);
		       
		       while(q.size())
		       {
		           //check the front element is repeating or not 
		           if(mp[q.front()] > 1)
		           {
		               q.pop();
		           }
		           else
		           {
		               ans.push_back(q.front());
		               break;
		           }
		       }
		       if(q.empty()) ans.push_back('#');
		   }
		   return ans;
		}

};
can be solve in another qpproach we will see it while revising 
